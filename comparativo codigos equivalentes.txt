C1,C2

A:=[KMatrixSpace(GF(2), 3, 6) |[ GF(2) | 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0 ]];A:=A[1];
AA:=[KMatrixSpace(GF(2), 2, 6) |[ GF(2) | 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0]];AA:=AA[1];
B:=[KMatrixSpace(GF(2), 3, 6) | [ GF(2) | 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1 ]];B:=B[1];
BB:=[KMatrixSpace(GF(2), 2, 6) | [ GF(2) | 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1 ]];BB:=BB[1];
C1:=LinearCode(A);C2:=LinearCode(B);
CC1:=LinearCode(AA);CC2:=LinearCode(BB);
G:=Sym(Length(C1));
SG:={};
Sgg:={};
for g in G do
T:=C1^g;
TT:=CC1^g;
if T eq C2 then
Include(~SG,g);
end if;
if TT eq CC2 then
Include(~Sgg,g);
end if;
end for;

> #SG;
48
> #Sgg;
36
> #SG meet Sgg
> ;

>> #SG meet Sgg
       ^
Runtime error in 'meet': Bad argument types
Argument types given: RngIntElt, SetEnum[GrpPermElt]

> #{SG meet Sgg};
1
> SG  meet Sgg;
{
    (1, 2)(4, 6),
    (1, 2, 6, 4),
    (1, 3, 2, 6, 4),
    (1, 3, 2)(4, 6),
    (1, 2, 4),
    (1, 3, 2),
    (1, 2),
    (1, 3, 2, 4),
    (1, 2, 6),
    (1, 2, 4, 6),
    (1, 3, 2, 6),
    (1, 3, 2, 4, 6)
}
> SG;
{
    (1, 2, 4, 5),
    (1, 3, 2, 6)(4, 5),
    (1, 2, 6)(4, 5),
    (1, 3, 2, 5, 4, 6),
    (1, 3, 2)(4, 6, 5),
    (1, 2, 5, 4, 6),
    (1, 2)(4, 6, 5),
    (1, 3, 2, 5, 6, 4),
    (1, 3, 2)(4, 5),
    (1, 3, 2, 4),
    (1, 2, 5, 6, 4),
    (1, 3, 2)(4, 6),
    (1, 2)(4, 5),
    (1, 3, 2, 6),
    (1, 2, 4),
    (1, 2)(4, 6),
    (1, 2, 6),
    (1, 3, 2, 6, 4, 5),
    (1, 2, 6, 4, 5),
    (1, 3, 2, 4)(5, 6),
    (1, 3, 2, 5)(4, 6),
    (1, 3, 2, 4, 6),
    (1, 3, 2, 6, 5),
    (1, 2, 4)(5, 6),
    (1, 3, 2, 6, 5, 4),
    (1, 2, 5)(4, 6),
    (1, 3, 2),
    (1, 2, 4, 6),
    (1, 2, 6, 5),
    (1, 3, 2)(4, 5, 6),
    (1, 2, 6, 5, 4),
    (1, 2),
    (1, 2)(4, 5, 6),
    (1, 3, 2, 4, 6, 5),
    (1, 3, 2, 5, 6),
    (1, 3, 2, 6, 4),
    (1, 3, 2)(5, 6),
    (1, 3, 2, 5),
    (1, 3, 2, 5, 4),
    (1, 2, 4, 6, 5),
    (1, 2, 5, 6),
    (1, 2, 6, 4),
    (1, 2)(5, 6),
    (1, 3, 2, 4, 5, 6),
    (1, 2, 5),
    (1, 2, 5, 4),
    (1, 3, 2, 4, 5),
    (1, 2, 4, 5, 6)
}
> Sgg;
{
    (1, 5, 3, 2, 6, 4),
    (1, 5, 2),
    (1, 2)(3, 5),
    (1, 3, 5, 2, 4, 6),
    (1, 3, 5, 2),
    (1, 5, 2, 6, 4),
    (1, 2, 6, 4)(3, 5),
    (1, 3, 2, 4),
    (1, 3, 2)(4, 6),
    (1, 3, 5, 2, 6, 4),
    (1, 3, 2, 6),
    (1, 2, 4),
    (1, 2)(4, 6),
    (1, 2, 6),
    (1, 5, 3, 2, 4),
    (1, 5, 3, 2)(4, 6),
    (1, 5, 3, 2, 6),
    (1, 3, 2, 4, 6),
    (1, 3, 2),
    (1, 2, 4, 6),
    (1, 2),
    (1, 5, 2, 4),
    (1, 5, 2)(4, 6),
    (1, 2, 4)(3, 5),
    (1, 5, 2, 6),
    (1, 2)(3, 5)(4, 6),
    (1, 5, 3, 2, 4, 6),
    (1, 2, 6)(3, 5),
    (1, 3, 2, 6, 4),
    (1, 5, 3, 2),
    (1, 3, 5, 2, 4),
    (1, 3, 5, 2)(4, 6),
    (1, 2, 6, 4),
    (1, 3, 5, 2, 6),
    (1, 5, 2, 4, 6),
    (1, 2, 4, 6)(3, 5)
}
> A;AA;
[0 1 0 0 0 1]
[0 0 0 1 0 1]
[0 0 0 0 1 1]
[0 1 0 0 0 1]
[0 0 0 1 0 1]
> B;
[1 0 0 0 0 1]
[0 0 0 1 0 1]
[0 0 0 0 1 1]
> BB;
[1 0 0 0 0 1]
[0 0 0 1 0 1]
> Aut(C1);
Set of all automorphisms of [6, 3, 2] Linear Code over GF(2)
Mapping from: GrpPerm: G to Set of all automorphisms of [6, 3, 2] Linear Code 
over GF(2)
> $1;
Set of all automorphisms of [6, 3, 2] Linear Code over GF(2)
Mapping from: GrpPerm: G to Set of all automorphisms of [6, 3, 2] Linear Code 
over GF(2)
> #$1;

>> #$1;
   ^
Runtime error in '#': Bad argument types
Argument types given: PowMapAut

> #Aut(C1);

>> #Aut(C1);
   ^
Runtime error in '#': Bad argument types
Argument types given: PowMapAut

> AutomorphismGroup(C1);
Permutation group acting on a set of cardinality 6
Order = 48 = 2^4 * 3
    (2, 6)
    (2, 5)
    (4, 5)
    (1, 3)
> AutomorphismGroup(CC1);
Permutation group acting on a set of cardinality 6
Order = 36 = 2^2 * 3^2
    (2, 4)
    (4, 6)
    (1, 3)
    (1, 5)
> AutomorphismGroup(CC2);
Permutation group acting on a set of cardinality 6
Order = 36 = 2^2 * 3^2
    (1, 4)
    (1, 6)
    (2, 3)
    (2, 5)
> AutomorphismGroup(C2); 
Permutation group acting on a set of cardinality 6
Order = 48 = 2^4 * 3
    (5, 6)
    (1, 5)
    (1, 4)
    (2, 3)
    
    
    /q///////////////////////////////////////////////////
     #SG;
12
> #Sgg;
16
> SG;
{
    (1, 4, 6, 2),
    (1, 4, 3, 6, 2),
    (1, 4, 5, 6),
    (1, 4, 3, 5, 6),
    (1, 4, 6)(3, 5),
    (1, 4, 5, 3, 6),
    (1, 4, 6),
    (1, 4, 3, 6),
    (1, 4, 3, 5, 6, 2),
    (1, 4, 5, 6, 2),
    (1, 4, 6, 2)(3, 5),
    (1, 4, 5, 3, 6, 2)
}
> Sgg;
{
    (1, 5, 3, 6, 2),
    (1, 4, 5, 3, 6),
    (1, 5, 2, 3),
    (1, 4, 5)(2, 3),
    (1, 5, 6),
    (1, 4, 5, 3, 6, 2),
    (1, 5)(2, 6, 3),
    (1, 4, 5, 2, 3),
    (1, 5, 6, 2),
    (1, 5, 2, 6, 3),
    (1, 4, 5, 6),
    (1, 4, 5)(2, 6, 3),
    (1, 4, 5, 6, 2),
    (1, 4, 5, 2, 6, 3),
    (1, 5, 3, 6),
    (1, 5)(2, 3)
}
> SG meet Sgg;
{
    (1, 4, 5, 6),
    (1, 4, 5, 6, 2),
    (1, 4, 5, 3, 6),
    (1, 4, 5, 3, 6, 2)
}

0 1 0 0 0 1]
[0 0 1 0 1 0]
[0 0 0 1 1 0]
> AA;
[0 1 0 0 0 1]
[0 0 1 0 1 0]
> B;
[1 1 0 0 0 0]
[0 0 1 0 0 1]
[0 0 0 0 1 1]
> BB;
[1 1 0 0 0 0]
[0 0 1 0 0 1]

> AutomorphismGroup(C1);
Permutation group acting on a set of cardinality 6
Order = 12 = 2^2 * 3
    (4, 5)
    (3, 4)
    (2, 6)
> AutomorphismGroup(C2);
Permutation group acting on a set of cardinality 6
Order = 12 = 2^2 * 3
    (5, 6)
    (3, 6)
    (1, 2)
> AutomorphismGroup(CC2);
Permutation group acting on a set of cardinality 6
Order = 16 = 2^4
    (3, 6)
    (1, 2)
    (1, 3)(2, 6)
    (4, 5)
> AutomorphismGroup(CC1);
Permutation group acting on a set of cardinality 6
Order = 16 = 2^4
    (3, 5)
    (2, 6)
    (2, 3)(5, 6)
    (1, 4)


> for g in AutomorphismGroup(C2) do g; end for;
Id($)
(1, 2)
(3, 6)
(1, 2)(3, 6)
(3, 5, 6)
(1, 2)(3, 5, 6)
(5, 6)
(1, 2)(5, 6)
(3, 6, 5)
(1, 2)(3, 6, 5)
(3, 5)
(1, 2)(3, 5)
> for g in AutomorphismGroup(CC2) do g; end for;
Id($)
(4, 5)
(1, 2)
(1, 2)(4, 5)
(1, 3)(2, 6)
(1, 3)(2, 6)(4, 5)
(1, 6, 2, 3)
(1, 6, 2, 3)(4, 5)
(3, 6)
(3, 6)(4, 5)
(1, 2)(3, 6)
(1, 2)(3, 6)(4, 5)
(1, 3, 2, 6)
(1, 3, 2, 6)(4, 5)
(1, 6)(2, 3)
(1, 6)(2, 3)(4, 5)
> for g in AutomorphismGroup(CC1) do g; end for; 
Id($)
(1, 4)
(2, 6)
(1, 4)(2, 6)
(2, 3)(5, 6)
(1, 4)(2, 3)(5, 6)
(2, 5, 6, 3)
(1, 4)(2, 5, 6, 3)
(3, 5)
(1, 4)(3, 5)
(2, 6)(3, 5)
(1, 4)(2, 6)(3, 5)
(2, 3, 6, 5)
(1, 4)(2, 3, 6, 5)
(2, 5)(3, 6)
(1, 4)(2, 5)(3, 6)

